**EasyShop**
================

EasyShop is a web application built using Spring Boot, providing a simple and intuitive platform for users to shop and manage products.

**Project Overview**
-------------------

Easy Shop is an already existing e-commerce application for technology and electronics. 
I was tasked with enhancing the application by fixing bugs 
that had been reported by users, implementing and editing existing methods, and adding new features.

**Features**
------------

* **User Authentication and Authorization:** The application allows users to register, login, and logout, and provides role-based access control to ensure that users can only access features and data that they are authorized to access.
* **Product management with CRUD operations:** The application provides a comprehensive product management system, allowing administrators to create, read, update, and delete products, as well as manage product categories and inventory.
* (WIP) - Shopping cart functionality with order management
* (WIP) - Simple and intuitive user interface using HTML, CSS, and JavaScript

**Project Structure**
---------------------

The project is structured into the following packages:

* `org.yearup`: The main application package
* `org.yearup.controllers`: Controllers for handling HTTP requests
* `org.yearup.data`: Data access objects (DAOs) for interacting with the database
* `org.yearup.models`: Model classes for representing data entities
* `org.yearup.security`: Security-related classes for authentication and authorization

**Getting Started**
-------------------

To run the application, follow these steps:

1. Clone the repository to your local machine
2. Install Maven and Java 17 on your system
3. Run the command `mvn spring-boot:run` to start the application
4. Access the application at `http://localhost:8080` in your web browser

**Configuration**
------------------

The application uses a number of configuration files to manage its behavior. These files include:

* **application.properties:** This file contains configuration settings for the application, such as database connection settings and security settings.
* **pom.xml:** This file contains configuration settings for the Maven build process.

**Database**
-----------
The application uses a MySQL database to store its data. The database schema is defined in the `schema.sql` file.

**Technologies Used**
----------------------

* Spring Boot
* Java 17
* Maven
* MySQL
* Bootstrap
* jQuery

**Contributing**
---------------

Contributions to the project are welcome! If you'd like to contribute, please fork the repository and submit a pull request with your changes.

**License**
----------

This project is licensed under the MIT License. See the LICENSE file for details.